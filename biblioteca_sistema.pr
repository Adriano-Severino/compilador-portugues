espaco BibliotecaDigital.Sistema
{
    publico classe Livro
    {
        publico texto Titulo { buscar; definir; }
        publico texto Autor { buscar; definir; }
        publico texto ISBN { buscar; definir; }
        publico inteiro AnoPublicacao { buscar; definir; }
        publico booleano Disponivel { buscar; definir; }
        publico texto Categoria { buscar; definir; }
        publico inteiro QuantidadeTotal { buscar; definir; }
        publico inteiro QuantidadeDisponivel { buscar; definir; }

        // ‚úÖ Construtor com par√¢metros opcionais
        publico Livro(texto titulo, texto autor, texto isbn, inteiro ano = 2024, texto categoria = "Geral", inteiro quantidade = 1) {
            Titulo = titulo;
            Autor = autor;
            ISBN = isbn;
            AnoPublicacao = ano;
            Categoria = categoria;
            QuantidadeTotal = quantidade;
            QuantidadeDisponivel = quantidade;
            Disponivel = verdadeiro;
        }

        publico vazio apresentarDetalhes(booleano completo = verdadeiro) {
            se (completo) {
                imprima($"üìö LIVRO: {Titulo}");
                imprima($"   Autor: {Autor}");
                imprima($"   ISBN: {ISBN}");
                imprima($"   Ano: {AnoPublicacao}");
                imprima($"   Categoria: {Categoria}");
                imprima($"   Dispon√≠vel: {QuantidadeDisponivel}/{QuantidadeTotal}");
                imprima($"   Status: {se (Disponivel) "Dispon√≠vel" sen√£o "Indispon√≠vel"}");
            } sen√£o {
                imprima($"üìö {Titulo} - {Autor} ({se (Disponivel) "‚úÖ" sen√£o "‚ùå"})");
            }
        }

        publico booleano emprestar() {
            se (QuantidadeDisponivel > 0) {
                QuantidadeDisponivel = QuantidadeDisponivel - 1;
                se (QuantidadeDisponivel == 0) {
                    Disponivel = falso;
                }
                retorne verdadeiro;
            }
            retorne falso;
        }

        publico vazio devolver() {
            QuantidadeDisponivel = QuantidadeDisponivel + 1;
            se (QuantidadeDisponivel > 0) {
                Disponivel = verdadeiro;
            }
        }
    }

    publico classe Usuario
    {
        publico texto Nome { buscar; definir; }
        publico texto Email { buscar; definir; }
        publico texto Telefone { buscar; definir; }
        publico inteiro NumeroCartao { buscar; definir; }
        publico texto TipoUsuario { buscar; definir; }
        publico inteiro LivrosEmprestados { buscar; definir; }
        publico inteiro LimiteEmprestimos { buscar; definir; }

        publico Usuario(texto nome, texto email, texto telefone = "", texto tipo = "Comum", inteiro limite = 3) {
            Nome = nome;
            Email = email;
            Telefone = telefone;
            TipoUsuario = tipo;
            LimiteEmprestimos = limite;
            LivrosEmprestados = 0;
            NumeroCartao = 1000 + (nome.tamanho() * 7); // Simula√ß√£o de gera√ß√£o de cart√£o
        }

        publico vazio apresentarPerfil() {
            imprima($"üë§ USU√ÅRIO: {Nome}");
            imprima($"   Email: {Email}");
            imprima($"   Cart√£o: #{NumeroCartao}");
            imprima($"   Tipo: {TipoUsuario}");
            imprima($"   Empr√©stimos: {LivrosEmprestados}/{LimiteEmprestimos}");
        }

        publico booleano podeEmprestar() {
            retorne LivrosEmprestados < LimiteEmprestimos;
        }
    }

    publico classe Biblioteca
    {
        publico texto Nome { buscar; definir; }
        publico texto Endereco { buscar; definir; }
        publico inteiro TotalLivros { buscar; definir; }
        publico inteiro TotalUsuarios { buscar; definir; }

        publico Biblioteca(texto nome, texto endereco = "Endere√ßo n√£o informado") {
            Nome = nome;
            Endereco = endereco;
            TotalLivros = 0;
            TotalUsuarios = 0;
        }

        publico vazio adicionarLivro(Livro livro) {
            TotalLivros = TotalLivros + 1;
            imprima($"‚úÖ Livro '{livro.Titulo}' adicionado √† biblioteca!");
        }

        publico vazio cadastrarUsuario(Usuario usuario) {
            TotalUsuarios = TotalUsuarios + 1;
            imprima($"‚úÖ Usu√°rio '{usuario.Nome}' cadastrado com sucesso!");
            imprima($"   N√∫mero do cart√£o: #{usuario.NumeroCartao}");
        }

        publico vazio realizarEmprestimo(Usuario usuario, Livro livro) {
            se (usuario.podeEmprestar()) {
                se (livro.emprestar()) {
                    usuario.LivrosEmprestados = usuario.LivrosEmprestados + 1;
                    imprima($"üìñ EMPR√âSTIMO REALIZADO:");
                    imprima($"   Livro: {livro.Titulo}");
                    imprima($"   Usu√°rio: {usuario.Nome}");
                    imprima($"   Cart√£o: #{usuario.NumeroCartao}");
                } sen√£o {
                    imprima($"‚ùå Livro '{livro.Titulo}' n√£o est√° dispon√≠vel!");
                }
            } sen√£o {
                imprima($"‚ùå Usu√°rio '{usuario.Nome}' atingiu o limite de empr√©stimos!");
            }
        }

        publico vazio realizarDevolucao(Usuario usuario, Livro livro) {
            livro.devolver();
            usuario.LivrosEmprestados = usuario.LivrosEmprestados - 1;
            imprima($"üì• DEVOLU√á√ÉO REALIZADA:");
            imprima($"   Livro: {livro.Titulo}");
            imprima($"   Usu√°rio: {usuario.Nome}");
        }

        publico vazio gerarRelatorio() {
            imprima("üìä ========== RELAT√ìRIO DA BIBLIOTECA ==========");
            imprima($"üèõÔ∏è  Biblioteca: {Nome}");
            imprima($"üìç Endere√ßo: {Endereco}");
            imprima($"üìö Total de Livros: {TotalLivros}");
            imprima($"üë• Total de Usu√°rios: {TotalUsuarios}");
            imprima("============================================");
        }

        publico vazio buscarLivrosPorCategoria(texto categoria) {
            imprima($"üîç Buscando livros da categoria: {categoria}");
            imprima("   (Simula√ß√£o - em implementa√ß√£o real buscaria no banco de dados)");
        }
    }

    publico funcao demonstrarSistema() {
        imprima("üéØ ===== SISTEMA DE BIBLIOTECA DIGITAL =====");
        imprima("");

        // ‚úÖ Criando biblioteca
        Biblioteca biblioteca = novo Biblioteca("Biblioteca Central de S√£o Paulo", "Av. Paulista, 1000");
        
        // ‚úÖ Criando livros com par√¢metros opcionais
        Livro livro1 = novo Livro("Dom Casmurro", "Machado de Assis", "978-85-359-0277-5", 1899, "Literatura", 3);
        Livro livro2 = novo Livro("1984", "George Orwell", "978-85-250-4099-1", 1949, "Fic√ß√£o Cient√≠fica", 2);
        Livro livro3 = novo Livro("Clean Code", "Robert Martin", "978-0-13-235088-4", 2008, "Tecnologia");
        Livro livro4 = novo Livro("O Pequeno Pr√≠ncipe", "Antoine de Saint-Exup√©ry", "978-85-325-2734-9");

        // ‚úÖ Adicionando livros
        biblioteca.adicionarLivro(livro1);
        biblioteca.adicionarLivro(livro2);
        biblioteca.adicionarLivro(livro3);
        biblioteca.adicionarLivro(livro4);

        imprima("");

        // ‚úÖ Criando usu√°rios com diferentes par√¢metros
        Usuario usuario1 = novo Usuario("Ana Silva", "ana.silva@email.com", "11987654321", "Premium", 5);
        Usuario usuario2 = novo Usuario("Jo√£o Santos", "joao@email.com", "11876543210");
        Usuario usuario3 = novo Usuario("Maria Oliveira", "maria@email.com");

        // ‚úÖ Cadastrando usu√°rios
        biblioteca.cadastrarUsuario(usuario1);
        biblioteca.cadastrarUsuario(usuario2);
        biblioteca.cadastrarUsuario(usuario3);

        imprima("");

        // ‚úÖ Mostrando detalhes dos livros
        imprima("üìã CAT√ÅLOGO DE LIVROS:");
        livro1.apresentarDetalhes();
        imprima("");
        livro2.apresentarDetalhes(falso); // Apresenta√ß√£o simples
        livro3.apresentarDetalhes(falso);
        livro4.apresentarDetalhes(falso);

        imprima("");

        // ‚úÖ Mostrando perfis dos usu√°rios
        imprima("üë• USU√ÅRIOS CADASTRADOS:");
        usuario1.apresentarPerfil();
        imprima("");
        usuario2.apresentarPerfil();
        imprima("");

        // ‚úÖ Simulando empr√©stimos
        imprima("üìñ REALIZANDO EMPR√âSTIMOS:");
        biblioteca.realizarEmprestimo(usuario1, livro1);
        biblioteca.realizarEmprestimo(usuario1, livro2);
        biblioteca.realizarEmprestimo(usuario2, livro1); // Deve falhar - quantidade
        biblioteca.realizarEmprestimo(usuario2, livro3);

        imprima("");

        // ‚úÖ Verificando status ap√≥s empr√©stimos
        imprima("üìä STATUS AP√ìS EMPR√âSTIMOS:");
        livro1.apresentarDetalhes(falso);
        livro2.apresentarDetalhes(falso);
        livro3.apresentarDetalhes(falso);

        imprima("");

        // ‚úÖ Simulando devolu√ß√µes
        imprima("üì• REALIZANDO DEVOLU√á√ïES:");
        biblioteca.realizarDevolucao(usuario1, livro1);

        imprima("");

        // ‚úÖ Status final
        livro1.apresentarDetalhes(falso);

        imprima("");

        // ‚úÖ Relat√≥rio final
        biblioteca.gerarRelatorio();

        // ‚úÖ Busca por categoria
        biblioteca.buscarLivrosPorCategoria("Literatura");
        biblioteca.buscarLivrosPorCategoria("Tecnologia");

        imprima("");
        imprima("‚ú® Sistema funcionando perfeitamente!");
    }
}

// ‚úÖ Executando o sistema
BibliotecaDigital.Sistema.demonstrarSistema();

// ‚úÖ Teste adicional de funcionalidades
inteiro totalOperacoes = 0;
imprima("üßÆ CONTABILIZANDO OPERA√á√ïES DO SISTEMA:");

totalOperacoes = totalOperacoes + 4; // Livros adicionados
totalOperacoes = totalOperacoes + 3; // Usu√°rios cadastrados  
totalOperacoes = totalOperacoes + 4; // Empr√©stimos tentados
totalOperacoes = totalOperacoes + 1; // Devolu√ß√µes

imprima($"üìà Total de opera√ß√µes realizadas: {totalOperacoes}");

se (totalOperacoes > 10) {
    imprima("üéØ Sistema com alta atividade!");
} sen√£o {
    imprima("üìä Sistema com atividade moderada.");
}

imprima("üèÅ ===== FIM DA DEMONSTRA√á√ÉO =====");
