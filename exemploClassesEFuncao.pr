// Definição de uma classe
publico classe Pessoa {
    // Campos privados
    privado texto nome;
    privado inteiro idade;
    
    // Construtor público
    publico construtor(texto nome_param, inteiro idade_param) {
        este.nome = nome_param;
        este.idade = idade_param;
    }
    
    // Métodos públicos
    publico metodo apresentar() => texto {
        retorne "Olá, eu sou " + este.nome + " e tenho " + este.idade + " anos";
    }
    
    publico metodo fazer_aniversario() {
        este.idade = este.idade + 1;
        imprima("Parabéns! Agora você tem " + este.idade + " anos");
    }
    
    // Método virtual para ser sobrescrito
    publico virtual metodo trabalhar() => texto {
        retorne "Estou trabalhando...";
    }
}

// Herança
publico classe Programador herda Pessoa {
    privado texto linguagem_favorita;
    
    publico construtor(texto nome, inteiro idade, texto linguagem) {
        // Chama construtor da classe pai
        super(nome, idade);
        este.linguagem_favorita = linguagem;
    }
    
    // Sobrescreve método da classe pai
    publico override metodo trabalhar() => texto {
        retorne "Estou programando em " + este.linguagem_favorita;
    }
    
    publico metodo debug() {
        imprima("Depurando código...");
    }
}

// Função independente
publico funcao saudacao(texto nome) -> texto {
    retorne "Bem-vindo, " + nome + "!";
}

// Programa principal
funcao principal() {
    // Criar objetos
    Pessoa p1 = novo Pessoa("Joana", 30);
    Programador dev = novo Programador("Mario", 25, "Rust");
    
    // Usar métodos
    imprima(p1.apresentar());
    p1.fazer_aniversario();
    
    imprima(dev.apresentar());
    imprima(dev.trabalhar());
    dev.debug();
    
    // Usar função
    imprima(saudacao("Ana"));
}
